\begin{Verbatim}[commandchars=\\\{\}]
\PYG{c+c1}{//mounting allows the component to be tested in isolation}
\PYG{k+kr}{import} \PYG{p}{\PYGZob{}} \PYG{n+nx}{mount} \PYG{p}{\PYGZcb{}} \PYG{n+nx}{from} \PYG{l+s+s1}{\PYGZsq{}@vue/test\PYGZhy{}utils\PYGZsq{}}
\PYG{k+kr}{import} \PYG{n+nx}{Counter} \PYG{n+nx}{from} \PYG{l+s+s1}{\PYGZsq{}./Projekt/Counter.js\PYGZsq{}}

\PYG{c+c1}{//describing test for Counter}
\PYG{n+nx}{describe}\PYG{p}{(}\PYG{l+s+s1}{\PYGZsq{}Counter\PYGZsq{}}\PYG{p}{,} \PYG{p}{()} \PYG{p}{=\PYGZgt{}} \PYG{p}{\PYGZob{}}
    
  \PYG{c+c1}{//mounted components are returned inside a wrapper}
  \PYG{c+c1}{//wrapper allows for easy manipulation, querying, etc.}
  \PYG{k+kr}{const} \PYG{n+nx}{wrapper} \PYG{o}{=} \PYG{n+nx}{mount}\PYG{p}{(}\PYG{n+nx}{Counter}\PYG{p}{)}
    
  \PYG{c+c1}{//first test case, checking if HTML output is as expected}
  \PYG{n+nx}{it}\PYG{p}{(}\PYG{l+s+s1}{\PYGZsq{}renders the correct markup\PYGZsq{}}\PYG{p}{,} \PYG{p}{()} \PYG{p}{=\PYGZgt{}} \PYG{p}{\PYGZob{}}
    \PYG{n+nx}{expect}\PYG{p}{(}\PYG{n+nx}{wrapper}\PYG{p}{.}\PYG{n+nx}{html}\PYG{p}{()).}\PYG{n+nx}{toContain}\PYG{p}{(}\PYG{l+s+s1}{\PYGZsq{}\PYGZlt{}span class=\PYGZdq{}count\PYGZdq{}\PYGZgt{}0\PYGZlt{}/span\PYGZgt{}\PYGZsq{}}\PYG{p}{)}
  \PYG{p}{\PYGZcb{})}

  \PYG{c+c1}{//checking if button exists}
  \PYG{n+nx}{it}\PYG{p}{(}\PYG{l+s+s1}{\PYGZsq{}has a button\PYGZsq{}}\PYG{p}{,} \PYG{p}{()} \PYG{p}{=\PYGZgt{}} \PYG{p}{\PYGZob{}}
    \PYG{n+nx}{expect}\PYG{p}{(}\PYG{n+nx}{wrapper}\PYG{p}{.}\PYG{n+nx}{contains}\PYG{p}{(}\PYG{l+s+s1}{\PYGZsq{}button\PYGZsq{}}\PYG{p}{)).}\PYG{n+nx}{toBe}\PYG{p}{(}\PYG{k+kc}{true}\PYG{p}{)}
  \PYG{p}{\PYGZcb{})}
  
  \PYG{c+c1}{//checking if buttonclick increments count}
  \PYG{n+nx}{it}\PYG{p}{(}\PYG{l+s+s1}{\PYGZsq{}button click should increment the count\PYGZsq{}}\PYG{p}{,} \PYG{p}{()} \PYG{p}{=\PYGZgt{}} \PYG{p}{\PYGZob{}}
    \PYG{n+nx}{expect}\PYG{p}{(}\PYG{n+nx}{wrapper}\PYG{p}{.}\PYG{n+nx}{vm}\PYG{p}{.}\PYG{n+nx}{count}\PYG{p}{).}\PYG{n+nx}{toBe}\PYG{p}{(}\PYG{l+m+mi}{0}\PYG{p}{)}
    \PYG{k+kr}{const} \PYG{n+nx}{button} \PYG{o}{=} \PYG{n+nx}{wrapper}\PYG{p}{.}\PYG{n+nx}{find}\PYG{p}{(}\PYG{l+s+s1}{\PYGZsq{}button\PYGZsq{}}\PYG{p}{)}
    \PYG{n+nx}{button}\PYG{p}{.}\PYG{n+nx}{trigger}\PYG{p}{(}\PYG{l+s+s1}{\PYGZsq{}click\PYGZsq{}}\PYG{p}{)}
    \PYG{n+nx}{expect}\PYG{p}{(}\PYG{n+nx}{wrapper}\PYG{p}{.}\PYG{n+nx}{vm}\PYG{p}{.}\PYG{n+nx}{count}\PYG{p}{).}\PYG{n+nx}{toBe}\PYG{p}{(}\PYG{l+m+mi}{1}\PYG{p}{)}
  \PYG{p}{\PYGZcb{})}
  
\PYG{p}{\PYGZcb{})}
\end{Verbatim}

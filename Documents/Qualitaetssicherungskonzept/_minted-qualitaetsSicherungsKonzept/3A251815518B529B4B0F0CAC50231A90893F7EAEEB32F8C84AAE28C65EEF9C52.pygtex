\begin{Verbatim}[commandchars=\\\{\}]
\PYG{k+kn}{import} \PYG{n+nn}{unittest} 
\PYG{k+kn}{from} \PYG{n+nn}{Projekt.MittringEmulator} \PYG{k+kn}{import} \PYG{n}{MittringEmulator}

\PYG{k}{class} \PYG{n+nc}{TestMittringEmulator}\PYG{p}{(}\PYG{n}{unittest}\PYG{o}{.}\PYG{n}{TestCase}\PYG{p}{):}  
    \PYG{c+c1}{\PYGZsh{} Instantiate Object to be tested}
    \PYG{k}{def} \PYG{n+nf}{setUp}\PYG{p}{(}\PYG{n+nb+bp}{self}\PYG{p}{):}
        \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{MittringEmulator} \PYG{o}{=} \PYG{n}{MittringEmulator}\PYG{p}{()}
        
    \PYG{c+c1}{\PYGZsh{} TestFunction}
    \PYG{k}{def} \PYG{n+nf}{testAdd}\PYG{p}{(}\PYG{n+nb+bp}{self}\PYG{p}{):}
        \PYG{c+c1}{\PYGZsh{}First TestCase, checking if add(3,4) results in 7}
        \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{assertEqual}\PYG{p}{(}\PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{MittringEmulator}\PYG{o}{.}\PYG{n}{add}\PYG{p}{(}\PYG{l+m+mi}{3}\PYG{p}{,}\PYG{l+m+mi}{4}\PYG{p}{),}\PYG{l+m+mi}{7}\PYG{p}{)}
        \PYG{c+c1}{\PYGZsh{}checking that add(\PYGZhy{}1,\PYGZhy{}1) does not result in 0}
        \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{assertNotEqual}\PYG{p}{(}\PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{MittringEmulator}\PYG{o}{.}\PYG{n}{add}\PYG{p}{(}\PYG{o}{\PYGZhy{}}\PYG{l+m+mi}{1}\PYG{p}{,}\PYG{o}{\PYGZhy{}}\PYG{l+m+mi}{1}\PYG{p}{),}\PYG{l+m+mi}{0}\PYG{p}{)}
            
\PYG{c+c1}{\PYGZsh{}Calling unittest, which does actual Testing}
\PYG{k}{if} \PYG{n+nv+vm}{\PYGZus{}\PYGZus{}name\PYGZus{}\PYGZus{}} \PYG{o}{==} \PYG{l+s+s1}{\PYGZsq{}\PYGZus{}\PYGZus{}main\PYGZus{}\PYGZus{}\PYGZsq{}}\PYG{p}{:}
    \PYG{n}{unittest}\PYG{o}{.}\PYG{n}{main}\PYG{p}{()}
\end{Verbatim}
